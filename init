#! /bin/zsh -x

setopt err_exit extended_glob no_unset warn_create_global

# Utility functions {{{
tag_mask() {
    integer r n
    for n ($@) {
        r+=$((1 << (n-1)))
    }
    echo $r
}
ALL_TAGS=$(tag_mask {1..32})
# }}}

# Configure environment {{{
systemctl --user set-environment \
    XDG_SESSION_TYPE=wayland \
    XDG_{CURRENT,SESSION}_DESKTOP=river

systemctl --user import-environment \
    PATH \
    WAYLAND_DISPLAY
# }}}

# Run background services {{{
systemctl --user start swaybg@$WAYLAND_DISPLAY

systemctl --user start foot-server@$WAYLAND_DISPLAY.socket

systemctl --user start sandbar@$WAYLAND_DISPLAY.socket
sandbar_pipe=$(systemctl --user show sandbar@$WAYLAND_DISPLAY.socket \
    --property=Listen |
    sed 's,.*=\(.*\) .*,\1,')
systemctl --user start sandbar_status@$WAYLAND_DISPLAY.service

systemctl --user start swayidle@$WAYLAND_DISPLAY.service

systemctl --user start wideriver@$WAYLAND_DISPLAY.service

systemctl --user start wob@$WAYLAND_DISPLAY.socket
# }}}

# Keybindings {{{
riverctl map normal Super+Shift Q exit

# Extended keys {{{
for mode (normal locked) {
    riverctl map $mode None XF86MonBrightnessUp spawn "brightness_toggle up"
    riverctl map $mode None XF86MonBrightnessDown spawn "brightness_toggle down"

    riverctl map $mode None XF86AudioPlay spawn "dtas-ctl play_pause"
    riverctl map $mode None XF86AudioNext spawn "dtas-ctl skip"

    riverctl map $mode None XF86AudioMute spawn "amixer sset Master toggle"
    riverctl map -repeat $mode None XF86AudioRaiseVolume \
        spawn "amixer sset Master 5%+"
    riverctl map -repeat $mode None XF86AudioLowerVolume \
        spawn "amixer sset Master 5%-"
}
# }}}

riverctl map normal Super Page_Up focus-output next
riverctl map normal Super Page_Down focus-output previous

# Tag management {{{
for tag ({1..9}) {
    tag_id=$(tag_mask $tag)

    riverctl map normal Super $tag set-focused-tags $tag_id
    riverctl map normal Super+Shift $tag set-view-tags $tag_id
    riverctl map normal Super+Control $tag toggle-focused-tags $tag_id
    riverctl map normal Super+Shift+Control $tag toggle-view-tags $tag_id
}

# Show all; treat it like Apple’s Exposé
riverctl map normal Super 0 set-focused-tags $ALL_TAGS
# }}}

# Window management {{{
riverctl map normal Super+Shift Return zoom
riverctl map normal Super+Shift C close
riverctl map normal Super+Shift 0 set-view-tags $ALL_TAGS

riverctl map normal Super+Control Space toggle-float
riverctl map normal Super F toggle-fullscreen

riverctl map normal Super Tab focus-view next
riverctl map normal Super+Shift Tab focus-view previous

riverctl map normal Super+Control Tab swap next
riverctl map normal Super+Control+Shift Tab swap previous

riverctl map normal Super+Shift Page_up send-to-output next
riverctl map normal Super+Shift Page_down send-to-output previous
# }}}

# Common applications {{{
riverctl map normal Super Return spawn "footclient --no-wait"
riverctl map normal Super Z spawn "exec firefox"
# }}}

riverctl map normal Super B spawn "echo all toggle-visibility >>$sandbar_pipe"
# }}}

# Theming {{{
riverctl background-color 0x1b1d1e
riverctl border-color-focused 0xa6e22e
riverctl border-color-unfocused 0x75715e
riverctl border-color-urgent 0xf92672
# }}}

# Input devices  {{{
riverctl set-repeat 50 300

declare -A kbd_opts=(
    [caps]=escape_shifted_capslock
    [compose]=paus
    [keypad]=future
    [parens]=swap_brackets
)
riverctl keyboard-layout \
    -options ${(kj:,:)kbd_opts/(#m)*/$MATCH:$kbd_opts[$MATCH]} \
    gb

riverctl input pointer-2-14-ETPS/2_Elantech_Touchpad tap enabled
riverctl input pointer-2-14-ETPS/2_Elantech_Touchpad pointer-accel 0.8
# }}}

# Window rules {{{
riverctl focus-follows-cursor normal

# Allow some rules to be stored outside default init to make it easier to share
# across different machines.  For example, I *need* conflicting rules for
# outputs depending on location.
[[ -f $0:a:h/local_rules ]] && source $0:a:h/local_rules

riverctl rule-add -app-id "chromium" tags $(tag_mask 2)
riverctl rule-add -app-id "firefox-esr" tags $(tag_mask 2)
riverctl rule-add -app-id "mpv" tags $(tag_mask 3)
# }}}

# Layout {{{
riverctl default-layout wideriver

riverctl declare-mode layout
riverctl map normal Super L enter-mode layout
riverctl map layout None Escape enter-mode normal

riverctl map layout None M send-layout-cmd wideriver "--layout monocle"
riverctl map layout None T send-layout-cmd wideriver "--layout left"
riverctl map layout Shift T send-layout-cmd wideriver "--layout wide"
riverctl map layout Control T send-layout-cmd wideriver "--layout right"
riverctl map layout None Space send-layout-cmd wideriver "--layout-toggle"

riverctl map layout None E send-layout-cmd wideriver "--stack even"
riverctl map layout None W send-layout-cmd wideriver "--stack dwindle"
riverctl map layout None I send-layout-cmd wideriver "--stack diminish"

riverctl map layout None Equal send-layout-cmd wideriver "--ratio 0.52"
riverctl map layout None H send-layout-cmd wideriver "--ratio +0.05"
riverctl map layout None L send-layout-cmd wideriver "--ratio -0.05"

riverctl map layout Shift Equal send-layout-cmd wideriver "--count 1"
riverctl map layout Shift H send-layout-cmd wideriver "--count +1"
riverctl map layout Shift L send-layout-cmd wideriver "--count -1"

riverctl set-focused-tags $(tag_mask 2)
riverctl send-layout-cmd wideriver "--layout monocle"
riverctl set-focused-tags $(tag_mask 4)
riverctl send-layout-cmd wideriver "--layout monocle"
riverctl set-focused-tags $(tag_mask 1)
# }}}

[[ -f $0:a:h/local_init ]] && source $0:a:h/local_init

# Show sandbar.  Sandbar is spawned hidden to allow us to issue per-tag layout
# changes or default applications without all the bar flashes that would result.
echo all show >>$sandbar_pipe
